{
  "uid" : "a04dba0575094a6d",
  "name" : "Проверка того, что выводятся свойства уточки с четным ID",
  "fullName" : "autotests.tests.duckActionController.DuckPropertiesTest.successfulPropertiesEvenId",
  "historyId" : "dfba6de8813ff8fe808ea44c1624e93",
  "time" : {
    "start" : 1738335078592,
    "stop" : 1738335079023,
    "duration" : 431
  },
  "status" : "broken",
  "statusMessage" : "org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n",
  "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.databaseUpdate(DuckActionsClient.java:38)\r\n\tat autotests.clients.DuckActionsClient.insertDuckDb(DuckActionsClient.java:65)\r\n\tat autotests.tests.duckActionController.DuckPropertiesTest.successfulPropertiesEvenId(DuckPropertiesTest.java:28)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:829)\r\nCaused by: com.consol.citrus.exceptions.CitrusRuntimeException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:104)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.doExecute(ExecuteSQLAction.java:73)\r\n\tat com.consol.citrus.actions.AbstractDatabaseConnectingTestAction.execute(AbstractDatabaseConnectingTestAction.java:91)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 29 more\r\nCaused by: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1541)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:431)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:97)\r\n\t... 32 more\r\nCaused by: org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.h2.engine.SessionRemote.done(SessionRemote.java:629)\r\n\tat org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:209)\r\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:192)\r\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:164)\r\n\tat org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:422)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:381)\r\n\t... 34 more\r\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "springTestContextBeforeTestClass",
    "time" : {
      "start" : 1738335078405,
      "stop" : 1738335078410,
      "duration" : 5
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "springTestContextPrepareTestInstance",
    "time" : {
      "start" : 1738335078411,
      "stop" : 1738335078413,
      "duration" : 2
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "before",
    "time" : {
      "start" : 1738335078414,
      "stop" : 1738335078414,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "springTestContextBeforeTestMethod",
    "time" : {
      "start" : 1738335078436,
      "stop" : 1738335078438,
      "duration" : 2
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "beforeSuite",
    "time" : {
      "start" : 1738335077293,
      "stop" : 1738335078365,
      "duration" : 1072
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n",
    "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.databaseUpdate(DuckActionsClient.java:38)\r\n\tat autotests.clients.DuckActionsClient.insertDuckDb(DuckActionsClient.java:65)\r\n\tat autotests.tests.duckActionController.DuckPropertiesTest.successfulPropertiesEvenId(DuckPropertiesTest.java:28)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:829)\r\nCaused by: com.consol.citrus.exceptions.CitrusRuntimeException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:104)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.doExecute(ExecuteSQLAction.java:73)\r\n\tat com.consol.citrus.actions.AbstractDatabaseConnectingTestAction.execute(AbstractDatabaseConnectingTestAction.java:91)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 29 more\r\nCaused by: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1541)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:431)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:97)\r\n\t... 32 more\r\nCaused by: org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.h2.engine.SessionRemote.done(SessionRemote.java:629)\r\n\tat org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:209)\r\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:192)\r\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:164)\r\n\tat org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:422)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:381)\r\n\t... 34 more\r\n",
    "steps" : [ {
      "name" : "Delete duck from DB",
      "time" : {
        "start" : 1738335078649,
        "stop" : 1738335078750,
        "duration" : 101
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@241ec0db"
      }, {
        "name" : "id",
        "value" : "${duckId}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Insert new duck DB",
      "time" : {
        "start" : 1738335078757,
        "stop" : 1738335078997,
        "duration" : 240
      },
      "status" : "broken",
      "statusMessage" : "org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n",
      "statusTrace" : "com.consol.citrus.exceptions.TestCaseFailedException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:143)\r\n\tat com.consol.citrus.DefaultTestCaseRunner.run(DefaultTestCaseRunner.java:125)\r\n\tat com.consol.citrus.TestActionRunner.$(TestActionRunner.java:35)\r\n\tat autotests.clients.DuckActionsClient.databaseUpdate(DuckActionsClient.java:38)\r\n\tat autotests.clients.DuckActionsClient.insertDuckDb(DuckActionsClient.java:65)\r\n\tat autotests.tests.duckActionController.DuckPropertiesTest.successfulPropertiesEvenId(DuckPropertiesTest.java:28)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat com.consol.citrus.testng.TestNGHelper.lambda$invokeTestMethod$1(TestNGHelper.java:82)\r\n\tat com.consol.citrus.common.DefaultTestLoader.lambda$doLoad$1(DefaultTestLoader.java:116)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\r\n\tat com.consol.citrus.common.DefaultTestLoader.doLoad(DefaultTestLoader.java:116)\r\n\tat com.consol.citrus.common.DefaultTestLoader.load(DefaultTestLoader.java:94)\r\n\tat com.consol.citrus.testng.TestNGHelper.invokeTestMethod(TestNGHelper.java:83)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:185)\r\n\tat com.consol.citrus.testng.spring.TestNGCitrusSpringSupport.run(TestNGCitrusSpringSupport.java:101)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:272)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:669)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:829)\r\nCaused by: com.consol.citrus.exceptions.CitrusRuntimeException: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:104)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.doExecute(ExecuteSQLAction.java:73)\r\n\tat com.consol.citrus.actions.AbstractDatabaseConnectingTestAction.execute(AbstractDatabaseConnectingTestAction.java:91)\r\n\tat com.consol.citrus.DefaultTestCase.executeAction(DefaultTestCase.java:136)\r\n\t... 29 more\r\nCaused by: org.springframework.dao.DuplicateKeyException: StatementCallback; SQL [insert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED')]; Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]; nested exception is org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1541)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:393)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:431)\r\n\tat com.consol.citrus.actions.ExecuteSQLAction.executeStatements(ExecuteSQLAction.java:97)\r\n\t... 32 more\r\nCaused by: org.h2.jdbc.JdbcSQLException: Нарушение уникального индекса или первичного ключа: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"\nUnique index or primary key violation: \"PRIMARY KEY ON PUBLIC.DUCK(ID)\"; SQL statement:\ninsert into DUCK (id, color, height, material, sound, wings_state) values (222, 'red', 0.53, 'metal', 'quack', 'FIXED') [23505-196]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:139)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:705)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:101)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:260)\r\n\tat org.h2.server.TcpServerThread.process(TcpServerThread.java:354)\r\n\tat org.h2.server.TcpServerThread.run(TcpServerThread.java:158)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1575)\r\n\r\n\tat org.h2.engine.SessionRemote.done(SessionRemote.java:629)\r\n\tat org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:209)\r\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:192)\r\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:164)\r\n\tat org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:422)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:381)\r\n\t... 34 more\r\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "runner",
        "value" : "com.consol.citrus.DefaultTestCaseRunner@241ec0db"
      }, {
        "name" : "color",
        "value" : "red"
      }, {
        "name" : "height",
        "value" : "0.53"
      }, {
        "name" : "material",
        "value" : "metal"
      }, {
        "name" : "sound",
        "value" : "quack"
      }, {
        "name" : "wingsState",
        "value" : "FIXED"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ {
    "name" : "after",
    "time" : {
      "start" : 1738335079232,
      "stop" : 1738335079232,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "springTestContextAfterTestClass",
    "time" : {
      "start" : 1738335079232,
      "stop" : 1738335079234,
      "duration" : 2
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "springTestContextAfterTestMethod",
    "time" : {
      "start" : 1738335079045,
      "stop" : 1738335079047,
      "duration" : 2
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "afterSuite",
    "time" : {
      "start" : 1738335079543,
      "stop" : 1738335079594,
      "duration" : 51
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "package",
    "value" : "autotests.tests.duckActionController.DuckPropertiesTest"
  }, {
    "name" : "testClass",
    "value" : "autotests.tests.duckActionController.DuckPropertiesTest"
  }, {
    "name" : "testMethod",
    "value" : "successfulPropertiesEvenId"
  }, {
    "name" : "parentSuite",
    "value" : "Gradle suite"
  }, {
    "name" : "suite",
    "value" : "Gradle test"
  }, {
    "name" : "subSuite",
    "value" : "autotests.tests.duckActionController.DuckPropertiesTest"
  }, {
    "name" : "host",
    "value" : "DESKTOP-HCFPEAN"
  }, {
    "name" : "thread",
    "value" : "10432@DESKTOP-HCFPEAN.TestNG-test=Gradle test-2(30)"
  }, {
    "name" : "framework",
    "value" : "testng"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "feature",
    "value" : "Duck Get Properties /api/duck/action/properties"
  }, {
    "name" : "epic",
    "value" : "Duck Action Controller"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "arg0",
    "value" : "null"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a04dba0575094a6d.json",
  "parameterValues" : [ "null" ]
}